hub:
  service:
    type: ClusterIP
    ports:
      nodePort:
  baseUrl: /
  cookieSecret:
  publicURL:
  uid: 1000
  fsGid: 1000
  nodeSelector: {}
  concurrentSpawnLimit: 64
  activeServerLimit:
  db:
    type: sqlite-pvc
    upgrade:
    pvc:
      annotations: {}
      selector: {}
      accessModes:
        - ReadWriteOnce
      storage: 1Gi
      subPath:
      storageClassName:
    url:
  labels: {}
  extraConfig: {}
  extraConfigMap: {}
  extraEnv: {}
  extraContainers: []
  extraVolumes: []
  extraVolumeMounts: []
  image:
    name: jupyterhub/k8s-hub
    tag: d378a69
  resources:
    requests:
      cpu: 0.2
      memory: 512Mi
  services: {}
  imagePullPolicy: IfNotPresent
  pdb:
    enabled: true
  networkPolicy:
    enabled: false
    egress:
      - to:
          - ipBlock:
              cidr: 0.0.0.0/0


rbac:
  enabled: true


proxy:
  secretToken: ''
  service:
    type: LoadBalancer
    labels: {}
    annotations: {}
    nodePorts:
      http:
      https:
  chp:
    image:
      name: jupyterhub/configurable-http-proxy
      tag: 3.0.0
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 0.2
        memory: 512Mi
  nginx:
    image:
      name: quay.io/kubernetes-ingress-controller/nginx-ingress-controller
      tag: 0.9.0
      pullPolicy: IfNotPresent
    proxyBodySize: 64m
    resources: {}
  lego:
    image:
      name: jetstack/kube-lego
      # We need a couple of fixes related to ingress.provider that are in master
      # When 0.1.6 is released, switch to that!
      tag: master-2368
    resources: {}
  labels:
  nodeSelector: {}
  pdb:
    enabled: true
  https:
    enabled: true
    type: letsencrypt
    letsencrypt:
      contactEmail: ''
    manual:
      key:
      cert:
    hosts: []
  networkPolicy:
    enabled: false
    egress:
      - to:
          - ipBlock:
              cidr: 0.0.0.0/0


auth:
  type: dummy
  whitelist:
    users:
  admin:
    access: true
    users:
  dummy:
    password:
  ldap:
    dn:
      search: {}
      user: {}
    user: {}
  state:
    enabled: false
    cryptoKey:


singleuser:
  networkTools:
    image:
      name: jupyterhub/k8s-network-tools
      tag: 81c2613
  cloudMetadata:
    enabled: false
    ip: 169.254.169.254
  networkPolicy:
    enabled: false
    egress:
    # Required egress is handled by other rules so it's safe to modify this
      - to:
          - ipBlock:
              cidr: 0.0.0.0/0
              except:
                - 169.254.169.254/32
  extraLabels: {}
  extraEnv: {}
  lifecycleHooks:
  initContainers:
  nodeSelector: {}
  uid: 1000
  fsGid: 100
  serviceAccountName:
  schedulerStrategy:
  storage:
    type: dynamic
    extraVolumes: []
    extraVolumeMounts: []
    static:
      pvcName:
      subPath: '{username}'
    capacity: 10Gi
    homeMountPath: /home/jovyan
    dynamic:
      storageClass:
      pvcNameTemplate: claim-{username}{servername}
      volumeNameTemplate: volume-{username}{servername}
      storageAccessModes: [ReadWriteOnce]
  image:
    name: jupyterhub/k8s-singleuser-sample
    tag: 5d060de
    pullPolicy: IfNotPresent
  startTimeout: 300
  cpu:
    limit:
    guarantee:
  memory:
    limit:
    guarantee: 1G
  cmd: jupyterhub-singleuser
  defaultUrl:


prePuller:
  hook:
    enabled: true
    extraEnv: {}
    image:
      name: jupyterhub/k8s-image-awaiter
      tag: 01eac78
  continuous:
    enabled: false
  extraImages: []
  pause:
    image:
      name: gcr.io/google_containers/pause
      tag: '3.0'


ingress:
  enabled: false
  annotations: {}
  hosts: []
  tls:


cull:
  enabled: true
  users: false
  timeout: 3600
  every: 600
  concurrency: 10
  maxAge: 0
  podCuller:
    image:
      name: jupyterhub/k8s-pod-culler
      tag: ce6a47f


debug:
  enabled: false
